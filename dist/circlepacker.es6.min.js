function sendWorkerMessage(i,s){i.postMessage(JSON.stringify(s))}function processWorkerMessage(i){return i.data?JSON.parse(i.data):{}}function isCircleValid(i){return i&&i.id&&i.radius&&i.position&&"number"==typeof i.position.x&&"number"==typeof i.position.y}function isBoundsValid(i){return i&&"number"==typeof i.width&&"number"==typeof i.height}class i{constructor(i){this.worker=new Worker(URL.createObjectURL(new Blob(['function sendWorkerMessage(i,s){i.postMessage(JSON.stringify(s))}function processWorkerMessage(i){return i.data?JSON.parse(i.data):{}}function receivedMessage(i){const{type,message}=processWorkerMessage(i);"bounds"===type&&e.setBounds(message),"target"===type&&setTarget(message),"addcircles"===type&&addCircles(message),"removecircle"===type&&e.removeCircle(message),"update"===type&&update(),"dragstart"===type&&e.dragStart(message.id,message.position),"drag"===type&&e.drag(message.id,message.position),"dragend"===type&&e.dragEnd(message.id),"centeringpasses"===type&&"number"==typeof message&&message>0&&(e.numberOfCenteringPasses=message),"collisionpasses"===type&&"number"==typeof message&&message>0&&(e.numberOfCollisionPasses=message)}function updatePage(i,s){sendWorkerMessage(self,{type:i,message:s})}function addCircles(i){Array.isArray(i)&&i.length&&i.forEach(e.addCircle.bind(e))}function setTarget(s){s&&"number"==typeof s.x&&"number"==typeof s.y&&e.setTarget(new i(s))}function update(){e.updatePositions(),sendPositions()}function sendPositions(){const i=e.allCircles.reduce((i,s)=>{return i[s.id]={position:s.position,previousPosition:s.previousPosition,radius:s.radius,delta:s.delta},i},{});updatePage("move",i)}class i{constructor(i,s){"object"==typeof i?(this.x=i.x,this.y=i.y):(this.x=i,this.y=s)}cp(){return new i(this.x,this.y)}mul(i){return this.x*=i,this.y*=i,this}normalize(){var i=this.length();return this.x/=i,this.y/=i,this}length(){var i=Math.sqrt(this.x*this.x+this.y*this.y);return i<.005&&i>-.005?1e-6:i}distance(i){var s=this.x-i.x,t=this.y-i.y;return Math.sqrt(s*s+t*t)}distanceSquared(i){var s=this.x-i.x,t=this.y-i.y;return s*s+t*t}}class s{constructor(s,t,e=0,n=0){this.id=s,this.targetPosition=new i(0,0),this.position=new i(e,n),this.previousPosition=new i(e,n),this.positionWithOffset=new i(e,n),this.previousPositionWithOffset=new i(e,n),this.setRadius(t)}setPosition(i){this.previousPosition=this.position,this.position=i.cp()}distanceSquaredFromTargetPosition(){var i=this.position.distanceSquared(this.targetPosition);return i<this.radiusSquared}setRadius(i){this.radius=i,this.radiusSquared=i*i,this.originalRadius=i}get delta(){return new i(this.position.x-this.previousPosition.x,this.position.y-this.previousPosition.y)}}class t{constructor(){this.allCircles=[],this.desiredTarget=new i(0,0),this.bounds={left:0,top:0,right:0,bottom:0},this.numberOfCenteringPasses=1,this.numberOfCollisionPasses=3}setBounds(i){this.bounds=i}addCircle(i){i instanceof s||(i=new s(i.id,i.radius,i.position.x,i.position.y)),this.allCircles.push(i),i.targetPosition=this.desiredTarget.cp()}removeCircle(i){const s=this.allCircles.reduce((s,t,e)=>{return t.id===i&&s.push(e),s},[]);for(let t=s.length-1;t>=0;t--)this.allCircles.splice(s[t],1)}updatePositions(){var i=this.allCircles,s=i.length;for(let t=0;t<s;++t){const s=i[t];s.previousPosition=s.position.cp()}this.desiredTarget&&this.pushAllCirclesTowardTarget(this.desiredTarget),this.handleCollisions()}pushAllCirclesTowardTarget(s){for(var t=new i(0,0),e=this.draggedCircle,n=this.allCircles,o=n.length,r=0;r<this.numberOfCenteringPasses;r++)for(var a=.025,d=0;d<o;d++){var u=n[d];u!==e&&(t.x=u.position.x-s.x,t.y=u.position.y-s.y,t.mul(a),u.position.x-=t.x,u.position.y-=t.y)}}handleCollisions(){for(var s=new i(0,0),t=this.draggedCircle,e=this.allCircles,n=e.length,o=0;o<this.numberOfCollisionPasses;o++)for(var r=0;r<n;r++)for(var a=e[r],d=r+1;d<n;d++){var u=e[d];if(a!==u){var h=u.position.x-a.position.x,c=u.position.y-a.position.y,l=1.08*(a.radius+u.radius),g=a.position.distanceSquared(u.position);if(g<l*l-.02){s.x=h,s.y=c,s.normalize();var f=.5*(l-Math.sqrt(g));s.mul(f),u!==t&&(a===t&&s.mul(2.2),u.position.x+=s.x,u.position.y+=s.y),a!==t&&(u===t&&s.mul(2.2),a.position.x-=s.x,a.position.y-=s.y)}}}}setDraggedCircle(i){this.draggedCircle&&this.draggedCircle!==i&&(this.draggedCircle.radius=this.draggedCircle.originalRadius),this.draggedCircle=i}dragStart(i){const s=this.allCircles.filter(s=>{return s.id===i})[0];this.setDraggedCircle(s)}dragEnd(i){this.draggedCircle&&this.setDraggedCircle(null)}drag(i,s){this.draggedCircle&&s&&(this.draggedCircle.position.x=s.x,this.draggedCircle.position.y=s.y)}setTarget(i){this.desiredTarget=i}}self.addEventListener("message",receivedMessage);const e=new t;'],{type:"text/javascript"}))),this.worker.addEventListener("message",this.receivedWorkerMessage.bind(this)),this.isContinuousModeActive="boolean"!=typeof i.continuousMode||i.continuousMode,this.onMoveStart=i.onMoveStart||null,this.onMove=i.onMove||null,this.onMoveEnd=i.onMoveEnd||null,i.centeringPasses&&this.setCenteringPasses(i.centeringPasses),i.collisionPasses&&this.setCollisionPasses(i.collisionPasses),this.addCircles(i.circles),this.setBounds(i.bounds),this.setTarget(i.target),this.isLooping=!1,this.areItemsMoving=!0,this.animationFrameId=NaN,this.initialized=!0,this.isContinuousModeActive&&this.startLoop()}receivedWorkerMessage(i){const s=processWorkerMessage(i);if("move"===s.type){const i=s.message;this.areItemsMoving=this.hasItemMoved(i)}this.updateListeners(s)}updateWorker(i,s){sendWorkerMessage(this.worker,{type:i,message:s})}updateListeners({type,message}){"movestart"===type&&"function"==typeof this.onMoveStart&&this.onMoveStart(message),"move"===type&&"function"==typeof this.onMove&&this.onMove(message),"moveend"===type&&"function"==typeof this.onMoveEnd&&this.onMoveEnd(message)}addCircles(i){if(Array.isArray(i)&&i.length){const s=i.filter(isCircleValid);s.length&&this.updateWorker("addcircles",s)}this.startLoop()}addCircle(i){this.addCircles([i])}removeCircle(i){i&&(i.id?this.updateWorker("removecircle",i.id):this.updateWorker("removecircle",i),this.startLoop())}setBounds(i){isBoundsValid(i)&&(this.updateWorker("bounds",i),this.startLoop())}setTarget(i){this.updateWorker("target",i),this.startLoop()}setCenteringPasses(i){this.updateWorker("centeringpasses",i)}setCollisionPasses(i){this.updateWorker("collisionpasses",i)}update(){this.updateWorker("update")}dragStart(i){this.updateWorker("dragstart",{id:i}),this.startLoop()}drag(i,s){this.updateWorker("drag",{id:i,position:s}),this.startLoop()}dragEnd(i){this.updateWorker("dragend",{id:i}),this.startLoop()}updateLoop(){this.update(),this.isLooping&&(this.areItemsMoving?this.animationFrameId=requestAnimationFrame(this.updateLoop.bind(this)):this.stopLoop())}startLoop(){!this.isLooping&&this.initialized&&this.isContinuousModeActive&&(this.isLooping=!0,this.isContinuousModeActive&&(this.areItemsMoving=!0),this.updateListeners("movestart"),this.animationFrameId=requestAnimationFrame(this.updateLoop.bind(this)))}stopLoop(){this.isLooping&&(this.isLooping=!1,this.updateListeners("moveend"),cancelAnimationFrame(this.animationFrameId))}hasItemMoved(i){let s=!1;for(let t in i)Math.abs(i[t].delta.x)>.005&&Math.abs(i[t].delta.y)>.005&&(s=!0);return s}destroy(){this.worker&&this.worker.terminate(),this.stopLoop()}}export default i;