import { CircleInputType } from "./CirclePacker";
import Vector from "./Vector";
export default class PackedCircle<T> {
    private _previousPosition;
    private _targetPosition;
    private _position;
    private _positionWithOffset;
    private _previousPositionWithOffset;
    private _radius;
    private _originalRadius;
    private radiusSquared;
    previousPosition: Vector;
    readonly originalRadius: number;
    readonly positionWithOffset: Vector;
    readonly previousPositionWithOffset: Vector;
    private initializeRadius;
    targetPosition: Vector;
    position: Vector;
    radius: number;
    _id: string;
    _locked: boolean;
    _additional: T | undefined;
    readonly id: string;
    readonly locked: boolean;
    readonly additional: T | undefined;
    constructor({ id, radius, position, locked, additional }: CircleInputType<T>);
    setPosition(aPosition: Vector): void;
    distanceSquaredFromTargetPosition(): boolean;
    readonly delta: Vector;
}
